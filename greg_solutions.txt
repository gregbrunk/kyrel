DAY 1 ANSWERS:

var initial_state = [ '.', '.', '.', '.', '.' ];

function main(n) {
  moveRight();
  moveRight();
  useBlue();
  draw();

} 

——

var initial_state = ['b', 'b', 'b', 'b', 'b'];

function main(n) {
  moveRight();
  moveRight();
  erase();

}


DAY 2 ANSWERS:

var initial_state = ['b', 'b', 'b', 'b', 'b'];

function main(n) {
  moveRight();
  erase();
  moveRight();
  moveRight();
  erase();

}
___

var initial_state = ['g', 'g', 'g', '.', '.'];

function main(n) {
  moveRight();
  useBlue();
  draw();
  moveRight();
  moveRight();
  useBlue();
  draw();

}

___

var initial_state = [‘g’, '.', '.', '.', '.'];

function main(n) {
  if (onBlue()) {
      erase();
      moveRight();
      moveRight();
      moveRight();
      moveRight();
      useBlue();
      draw();
  } else if (onGreen()) {
      erase();
      moveRight();
      moveRight();
      moveRight();
      moveRight();
      useGreen();
      draw();
  } else {
  }
}

DAY 3 ANSWERS:
1. all_blue

var initial_state = ['.', '.', '.', '.', '.'];

function main(n) {
 for (n=0; n < initial_state.length; n++) {
    useBlue();
    draw();
    moveRight();
 }
}

2. all_first_color

var initial_state = ['g', '.', '.', '.', '.'];

function main(n) {
  if (onBlue()) {
    useBlue();
  } else if (onGreen()) {
    useGreen();
  }
  for (var i=0; i < initial_state.length; i++) {
    draw();
    moveRight();
  }
}

3. n_in_a_row

var initial_state = ['.', '.', '.', '.', '.'];

function main(n) {
  var n = 5;
  useBlue();
  
  for (i=0; i < n; i++){
    draw();
    moveRight();
  }
}

4. every_even_erase

var initial_state = ['b','b','b','b','b',];

function main(n) {
  for (i=0; i < 5; i+=1){
    erase();
    moveRight();
    moveRight();
  }
}

5. every_odd_erase //I intentionally did these two differently

var initial_state = ['b','b','b','b','b',];

function main(n) {
  for (i=0; i < 5; i++){
    if (i%2 !== 0){
      erase();
    }
  moveRight();
  }
}

6. every_n_erase

var initial_state = ['b', 'b', 'b', 'b', 'b'];

function main(n) {
  var n = 3;
  for (i=0; i < 5; i++){
    if ((i+1)%n === 0){
      erase();
    }
    moveRight();
  }
}

DAY 4 ANSWERS:
1. bleed_right

var initial_state = ['.', '.', 'b', '.', '.'];

for(var i=0; i<5; i++) {
  if (onBlue()) {
    useBlue();
  } else if (onGreen()) {
    useGreen();
  } else {
    draw();
  }
  moveRight();
}

2. invert_colors

var initial_state = ['.', 'g', '.', '.', 'b'];

function main(n) {
  for (var i = 0; i < 5; i++) {
    if (onBlue()){
      useGreen();
      draw();
    } else if (onGreen()){
      useBlue();
      draw();
    }
    moveRight();
  }
}

3. reverse_row

var initial_state = ['b', '.', 'g', '.', '.'];

function main(n) {
  var reverseOrder = initial_state.reverse();

  for(var i=0; i<5; i++) {
    if (reverseOrder[i]==='b'){
      useBlue();
      draw();
    } else if (reverseOrder[i]==='g'){
      useGreen();
      draw();
    }else {
      erase();
    }
    moveRight();
  } 
}
//!!! recommitting and pushing because commit message was wrong - this answers sheet is up to date through DAY 4 (THURSDAY), not just Day 3.


DAY 5 ANSWERS:
1. move_the_blue_dot_one_to_the_right

var initial_state = ['g', 'g', 'b', '.', 'g'];

function main(n) {
  for (i=0; i < initial_state.length; i++) {
    if (onBlue()) {
        erase();
        moveRight();
        useBlue();
        draw();
        break;
    } else {
      moveRight();
    }
  }
}

2. delete_before (this only works if the last is blue)

var initial_state = ['g', 'b', 'b', '.', '.'];

function main(n) {
  for (var i=0; i < initial_state.length; i++) {
    if (onBlue()) {
      moveLeft();
      erase();
      moveRight();
    } 
    moveRight();
  }
}

3. pull_blues_right

var initial_state = ['b', '.', 'b', '.', '.'];

function main(n) {
  var numberOfBlues = 0;
  for (var i=0; i < initial_state.length; i++) {
    if (onBlue()) {
      numberOfBlues += 1;
    } 
    erase();
    moveRight();
  }
  useBlue();
  
  while (numberOfBlues--) {
    draw();
    moveLeft();
  }
}

4. pull_blues_right

var initial_state = ['b', 'b', 'b', '.', 'b'];

function main(n) {
  var numberOfBlues = 0;
  
  for (var i=0; i < initial_state.length; i++) {
    if (onBlue()) {
      numberOfBlues += 1;
    } 
    useBlue();
    draw();
    moveRight();
  }
  
  for (i=0; i < (5-numberOfBlues); i++) {
    erase();
    moveLeft();
  }
}